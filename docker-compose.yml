version: '3.8'

services:
  postgres:
    build:
      context: .
      dockerfile: db.dockerfile
    container_name: wisher_database
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5430:5430"
    restart: always
    networks:
      mynet:
        ipv4_address: 173.20.0.2
  bot:
    container_name: wisher_bot
    build:
      context: .
      dockerfile: bot.dockerfile
    restart: always
    depends_on:
      - postgres
      - aicaller
    stdin_open: true
    expose:
      - 8080
    networks:
      mynet:
          ipv4_address: 173.20.0.3
  aicaller:
    container_name: wisher_ai_requester
    build:
      context: .
      dockerfile: congratulator.dockerfile
    restart: always
    depends_on:
      - postgres
    stdin_open: true
    expose:
      - 8081
    networks:
      mynet:
          ipv4_address: 173.20.0.4
  bridge_server:
    container_name: bridge_server
    build:
      context: .
      dockerfile: bridge.dockerfile
    restart: always
    depends_on:
      - postgres
      - aicaller
    stdin_open: true
    networks:
      mynet:
        ipv4_address: 173.20.0.5
volumes:
  dbdata:
networks:
  mynet:
    driver: "bridge"
    ipam:
      config:
        - subnet: 173.20.0.0/16
          gateway: 173.20.0.1
